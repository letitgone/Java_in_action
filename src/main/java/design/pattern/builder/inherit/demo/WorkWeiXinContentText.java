package design.pattern.builder.inherit.demo;public class WorkWeiXinContentText extends BaseMessage {    private static final String MSGTYPE = "text";    private Text text;    public WorkWeiXinContentText(String content) {        super(MSGTYPE);        this.text = new Text(content);    }    public WorkWeiXinContentText(WorkWeiXinContentTextBuilder builder) {        /**         * 调用的是父类的构造方法  public <T extends BaseMessageBuilder> BaseMessage(BaseMessageBuilder builder)         */        super(builder);        this.text = builder.text;    }    public static WorkWeiXinContentTextBuilder builder() {        return new WorkWeiXinContentTextBuilder(MSGTYPE);    }    public Text getText() {        return text;    }    /**     * 如果先赋值子类的属性 则返回的是子类的WorkWeiXinContentTextBuilder ,如果先赋值父类的属性 不加泛型的话  返回的是父类的 BaseMessageBuilder 无法转换为子类对象 WorkWeiXinContentText     */    public static class WorkWeiXinContentTextBuilder extends BaseMessageBuilder<WorkWeiXinContentTextBuilder> {        private Text text;        WorkWeiXinContentTextBuilder(String msgtype) {            super(msgtype);        }        public WorkWeiXinContentTextBuilder text(Text text) {            this.text = text;            return this;        }        public WorkWeiXinContentText build() {            return new WorkWeiXinContentText(this);        }    }}